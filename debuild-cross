#!/bin/sh

#  Copyright (c) 2006  Volker Grabsch <volker-ad@v.notjusthosting.com>
#
#  Permission is hereby granted, free of charge, to any person obtaining
#  a copy of this software and associated documentation files (the
#  "Software"), to deal in the Software without restriction, including
#  without limitation the rights to use, copy, modify, merge, publish,
#  distribute, sublicense, and/or sell copies of the Software, and to
#  permit persons to whom the Software is furnished to do so, subject
#  to the following conditions:
#
#  The above copyright notice and this permission notice shall be
#  included in all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
#  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


# syntax check
#

[ "$2" ] || { cat <<EOF

    debuild-cross - 1.2
    ===================

Cross compile a Debian source package.


Requires:
    dpkg-dev, fakeroot, sed

Syntax:
    debuild-cross <debsrc-pkgname> <arch> [<dpkg-buildpackage options>]

Example:
    debuild-cross smpeg win32 -us -uc

EOF
exit 1
}


# read parameters
#

SOURCE=$1
ARCH=$2

shift 2  # dpkg-buildpackage options are now in $@


# sanity checks
#

echo "looking for: $SOURCE source package"
VERSION=`ls -1 -d "$SOURCE"*/ | sed -n '1 s!^'"$SOURCE"'-\(.*\)/$!\1! p'`
[ "$VERSION" ] || { cat <<EOF

Unable to find the unpacked sources of:
    $SOURCE

EOF
exit 1
}
echo "found: version $VERSION"

echo "looking for: patch-$ARCH-$SOURCE"
[ -d "patch-$ARCH-$SOURCE" ] || { cat <<EOF

Unable to find the patch folder:
    patch-$ARCH-$SOURCE/

To get started, try:
    debuild-cross-prepare $SOURCE $ARCH

EOF
exit 1
}

echo "checking: debian/control"
MAINTAINER=`cat "patch-$ARCH-$SOURCE/debian/control" | sed -n 's/^Maintainer: \(.*\)/\1/p'`
[ "$MAINTAINER" ] || { cat <<EOF

You have to adjust at lest the "Maintainer:" field in:
    patch-$ARCH-$SOURCE/debian/control

Maintainer: Your Name <your@mail.address>

EOF
exit 1
}


# create Debian source directory
#

echo "creating: $ARCH-$SOURCE-$VERSION"
rm -rf "$ARCH-$SOURCE-$VERSION"
cp -r "$SOURCE-$VERSION" "$ARCH-$SOURCE-$VERSION"

echo "patching with: patch-$ARCH-$SOURCE"
cp -r "patch-$ARCH-$SOURCE"/* "$ARCH-$SOURCE-$VERSION"

echo "looking for: ${SOURCE}_$VERSION.orig"
[ -d "$ARCH-${SOURCE}_$VERSION.orig" ] || \
[ -f "$ARCH-${SOURCE}_$VERSION.orig.tar.gz" ] || {
    echo "creating: ${SOURCE}_$VERSION.orig"
    ORIGDIR=`tar -tz -f "${SOURCE}_$VERSION.orig.tar.gz" | sed -n 1p`
    TMPDIR=${SOURCE}_$VERSION.orig.tar.gz_extract
    rm -rf "$TMPDIR"
    mkdir "$TMPDIR" || exit 1
    tar -xz -f "${SOURCE}_$VERSION.orig.tar.gz" -C "$TMPDIR" || exit 1
    mv "$TMPDIR/$ORIGDIR" "$ARCH-$SOURCE-$VERSION.orig" || exit 1
    rmdir "$TMPDIR" || exit 1
}

cd "$ARCH-$SOURCE-$VERSION"

echo "reading: debian/changelog"
CHANGELOG=`cat debian/changelog`
RELEASE=`echo "$CHANGELOG" | sed -n '1 s/^'"$SOURCE"' (\(.*\)).*/\1/ p'`
echo "current release: $RELEASE"
echo "increasing release to: $RELEASE+win32.0"
cat >debian/changelog <<EOF
$ARCH-$SOURCE ($RELEASE+win32.0) unstable; urgency=low

  * Transform to a $ARCH cross compiling package.

 -- $MAINTAINER  `date -R`

$CHANGELOG
EOF


# build Debian packages
#

echo "building: Debian packages"
dpkg-buildpackage -rfakeroot "$@" || { cat <<EOF

Unable to build the package!

Please have a look into:
    $ARCH-$SOURCE-$VERSION/
and adjust the files in your patch folder:
    patch-$ARCH-$SOURCE/

EOF
exit 1
}


# clean up
#

cd ..
echo "removing: $ARCH-$SOURCE-$VERSION/"
rm -f -r "$ARCH-$SOURCE-$VERSION"
